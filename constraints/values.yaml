systemExcludedNamespaces:
  - kube-system

globalExcludedNamespaces:
  - gatekeeper-system

blockNamespaceWithoutLabelPrefix:
  - policy: default
    namespaces: []
    excludedNamespaces:
      - default
      - kube-node-lease
      - kube-public
    namespaceSelector: {}
    parameters:
      namespacePrefixLabelName: k8s.io/project

blockNamespaceWithoutRequiredLabels:
  - policy: default
    namespaces: []
    excludedNamespaces:
      - default
      - kube-node-lease
      - kube-public
    namespaceSelector: {}
    parameters:
      requiredLabels:
        - k8s.io/project

blockPodAddLinuxCapabilities:
  - policy: default
    namespaces: []
    excludedNamespaces: []
    namespaceSelector: {}
    parameters:
      allowedLinuxCapabilities:
        - NET_BIND_SERVICE

blockPodAddSysctlParameter:
  - policy: default
    namespaces: []
    excludedNamespaces: []
    namespaceSelector: {}

blockPodContainerPrivilegeEscalation:
  - policy: default
    namespaces: []
    excludedNamespaces: []
    namespaceSelector: {}

blockPodHostIPCNamespace:
  - policy: default
    namespaces: []
    excludedNamespaces: []
    namespaceSelector: {}

blockPodHostIPHostPortContainer:
  - policy: default
    namespaces: []
    excludedNamespaces: []
    namespaceSelector: {}

blockPodHostNetworkNamespace:
  - policy: default
    namespaces: []
    excludedNamespaces: []
    namespaceSelector: {}

blockPodHostPIDNamespace:
  - policy: default
    namespaces: []
    excludedNamespaces: []
    namespaceSelector: {}

blockPodOSNameWindows:
  - policy: default
    namespaces: []
    excludedNamespaces: []
    namespaceSelector: {}

blockPodPrivilegedContainer:
  - policy: default
    namespaces: []
    excludedNamespaces: []
    namespaceSelector: {}

blockPodProcMountContainer:
  - policy: default
    namespaces: []
    excludedNamespaces: []
    namespaceSelector: {}

blockPodRunRootUserContainer:
  - policy: default
    namespaces: []
    excludedNamespaces: []
    namespaceSelector: {}

blockPodUnconfinedAppArmorProfileContainer:
  - policy: default
    namespaces: []
    excludedNamespaces: []
    namespaceSelector: {}

blockPodUnconfinedSeccompProfileContainer:
  - policy: default
    namespaces: []
    excludedNamespaces: []
    namespaceSelector: {}

blockPodUntrustedImageRegistries:
  - policy: default
    namespaces: []
    excludedNamespaces: []
    namespaceSelector: {}
    parameters:
      trustedImageRegistries:
        - docker.io
        - gcr.io

blockPodVolumeTypes:
  - policy: default
    namespaces: []
    excludedNamespaces: []
    namespaceSelector: {}
    parameters:
      blockedVolumeTypes:
        - hostPath
        - emptyDir
        - ephemeral
        - flexVolume
        - flocker

blockPodWindowsHostProcess:
  - policy: default
    namespaces: []
    excludedNamespaces: []
    namespaceSelector: {}

blockPodWithoutNodeSelector:
  - policy: default
    namespaces: []
    excludedNamespaces: []
    namespaceSelector: {}
    parameters:
      nodeSelector:
        node.kubernetes.io/dedicated: "true"

blockPodWithoutTolerations:
  - policy: default
    namespaces: []
    excludedNamespaces: []
    namespaceSelector: {}
    parameters:
      tolerations:
        - key: dedicated
          value: "true"
          operator: Equal
          effect: NoSchedule
        - key: dedicated
          value: "true"
          operator: Equal
          tolerationSeconds: 300
          effect: NoExecute

blockServiceLoadBalancer:
  - policy: default
    namespaces: []
    excludedNamespaces: []
    namespaceSelector: {}

blockServiceNodePort:
  - policy: default
    namespaces: []
    excludedNamespaces: []
    namespaceSelector: {}
